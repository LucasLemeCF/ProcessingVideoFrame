name: Terraform Deploy

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      # Passo para empacotar a Lambda com dependências
      - name: Create ZIP file for process Lambda
        run: |
          mkdir -p lambda/process
          cp -r ./src/process/* lambda/process/
          cd lambda/process
          
          # Instalar dependências diretamente no diretório
          pip install -r ../../src/process/requirements.txt -t .
          
          # Criar o arquivo ZIP
          zip -r process_lambda_function.zip .
          cd ../../
      
      # Passo para baixar e empacotar o FFmpeg para a camada Lambda
      - name: Download and package FFmpeg for Lambda Layer
        run: |
          mkdir -p layer/ffmpeg
          cd layer/ffmpeg
          wget https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz
          tar -xvf ffmpeg-release-amd64-static.tar.xz --strip-components=1
          zip -r ffmpeg.zip .
          cd ../../

      # Verificar se o arquivo ZIP foi criado
      - name: Check if ZIP files exist
        run: |
          if [ ! -f lambda/process/process_lambda_function.zip ]; then
            echo "Process Lambda ZIP file not found!"
            exit 1
          fi
          if [ ! -f layer/ffmpeg/ffmpeg.zip ]; then
            echo "FFmpeg ZIP file not found!"
            exit 1
          fi

      # Listar os arquivos no ZIP
      - name: List files in ZIP
        run: 
          unzip -l lambda/process/process_lambda_function.zip
          unzip -l layer/ffmpeg/ffmpeg.zip

      # Terraform Init
      - name: Terraform Init
        run: terraform init
        working-directory: ./infra

      # Terraform Validate
      - name: Terraform Validate
        run: terraform validate
        working-directory: ./infra

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Terraform Refresh
      - name: Terraform Refresh
        run: terraform refresh -input=false
        working-directory: ./infra

      # Terraform Apply
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./infra
